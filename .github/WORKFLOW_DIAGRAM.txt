GitHub Actions CI/CD Pipeline for valid8r
==========================================

┌─────────────────────────────────────────────────────────────────────────────┐
│                           DEVELOPER WORKFLOW                                 │
└─────────────────────────────────────────────────────────────────────────────┘

1. Create Feature Branch
   ┌──────────────────────────────────────────┐
   │ git checkout -b feat/add-parser          │
   └──────────────────────────────────────────┘
                    ↓
2. Make Changes & Commit (Conventional Format)
   ┌──────────────────────────────────────────┐
   │ git commit -m "feat: add UUID parser"    │
   └──────────────────────────────────────────┘
                    ↓
3. Create Pull Request
   ┌──────────────────────────────────────────┐
   │ gh pr create --fill                      │
   └──────────────────────────────────────────┘
                    ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│                         CI WORKFLOW (ci.yml)                                 │
│                    Triggers: PR + Push to main                               │
└─────────────────────────────────────────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Parallel Jobs (must all pass):                   │
    │                                                    │
    │  ┌──────────────┐  ┌──────────────┐  ┌─────────┐ │
    │  │ Lint & Format│  │ Type Check   │  │  Docs   │ │
    │  │  (ruff)      │  │   (mypy)     │  │ Build   │ │
    │  └──────────────┘  └──────────────┘  └─────────┘ │
    │                                                    │
    │  ┌──────────────────────────────────────────────┐ │
    │  │         Unit Tests (pytest)                  │ │
    │  │  ┌─────────┐ ┌─────────┐ ┌─────────┐        │ │
    │  │  │ Python  │ │ Python  │ │ Python  │        │ │
    │  │  │  3.11   │ │  3.12   │ │  3.13   │        │ │
    │  │  └─────────┘ └─────────┘ └─────────┘        │ │
    │  └──────────────────────────────────────────────┘ │
    │                                                    │
    │  ┌──────────────┐  ┌──────────────┐              │
    │  │  BDD Tests   │  │ Smoke Test   │              │
    │  │  (behave)    │  │              │              │
    │  └──────────────┘  └──────────────┘              │
    └───────────────────────────────────────────────────┘
                    ↓
              All Checks Pass
                    ↓
4. Get Review & Merge to Main
   ┌──────────────────────────────────────────┐
   │ Squash & Merge (or Merge)                │
   │ PR title: "feat: add UUID parser"        │
   └──────────────────────────────────────────┘
                    ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│                  VERSION & RELEASE WORKFLOW                                  │
│                  (version-and-release.yml)                                   │
│                     Triggers: Push to main                                   │
└─────────────────────────────────────────────────────────────────────────────┘
                    ↓
         Get Commits Since Last Tag
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Analyze Conventional Commits:                    │
    │                                                    │
    │  feat: → Minor bump (0.1.0 → 0.2.0)              │
    │  fix:  → Patch bump (0.1.0 → 0.1.1)              │
    │  docs: → Patch bump                               │
    │  BREAKING CHANGE → Major (0.1.0 → 1.0.0)         │
    │  ci:   → No bump                                  │
    └───────────────────────────────────────────────────┘
                    ↓
         Determine Version Bump Type
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Update pyproject.toml:                           │
    │  version = "0.2.0"                                │
    └───────────────────────────────────────────────────┘
                    ↓
         Commit & Push Version Update
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Create Git Tag:                                  │
    │  git tag -a v0.2.0                                │
    │  git push origin v0.2.0                           │
    └───────────────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Generate Changelog (categorized by type):        │
    │  - Features                                       │
    │  - Bug Fixes                                      │
    │  - Documentation                                  │
    │  - Performance                                    │
    │  - Refactoring                                    │
    │  - Tests                                          │
    │  - Chores                                         │
    │  - Breaking Changes                               │
    └───────────────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Create GitHub Release:                           │
    │  - Tag: v0.2.0                                    │
    │  - Title: Release v0.2.0                          │
    │  - Body: Generated changelog                      │
    └───────────────────────────────────────────────────┘
                    ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│                    PUBLISH TO PYPI WORKFLOW                                  │
│                     (publish-pypi.yml)                                       │
│                Triggers: GitHub Release published                            │
└─────────────────────────────────────────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Check if Version Exists on PyPI:                 │
    │  curl https://pypi.org/pypi/valid8r/0.2.0/json    │
    └───────────────────────────────────────────────────┘
                    ↓
         ┌────────────────────────┐
         │ Already exists?        │
         └────────────────────────┘
          ↓ No              ↓ Yes
     Continue          Skip (safety check)
          ↓
    ┌───────────────────────────────────────────────────┐
    │  Build Package:                                   │
    │  poetry build                                     │
    │  - Creates wheel: valid8r-0.2.0-py3-none-any.whl │
    │  - Creates tarball: valid8r-0.2.0.tar.gz         │
    └───────────────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Test Built Package:                              │
    │  Install and test on:                             │
    │  ┌─────────┐ ┌─────────┐ ┌─────────┐            │
    │  │ Python  │ │ Python  │ │ Python  │            │
    │  │  3.11   │ │  3.12   │ │  3.13   │            │
    │  └─────────┘ └─────────┘ └─────────┘            │
    │  - Import validation                              │
    │  - Smoke tests                                    │
    └───────────────────────────────────────────────────┘
                    ↓
              All Tests Pass
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Publish to PyPI:                                 │
    │  poetry publish                                   │
    │  Using: PYPI_API_TOKEN secret                     │
    │  skip-existing: true (safety)                     │
    └───────────────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────────────────────┐
    │  Verify Publication:                              │
    │  pip install valid8r==0.2.0                       │
    │  python -c "import valid8r"                       │
    └───────────────────────────────────────────────────┘
                    ↓
┌─────────────────────────────────────────────────────────────────────────────┐
│                              SUCCESS!                                        │
│                                                                              │
│  ✓ Code tested and validated                                                │
│  ✓ Version bumped automatically                                             │
│  ✓ GitHub Release created with changelog                                    │
│  ✓ Package published to PyPI                                                │
│  ✓ Available for installation: pip install valid8r                          │
└─────────────────────────────────────────────────────────────────────────────┘


CONVENTIONAL COMMIT EXAMPLES:
=============================

feat(parsers): add UUID validation
→ Minor bump: 0.1.0 → 0.2.0

fix(validators): handle None values correctly
→ Patch bump: 0.1.0 → 0.1.1

docs: add examples to README
→ Patch bump: 0.1.0 → 0.1.1

feat!: redesign validation API
→ Major bump: 0.1.0 → 1.0.0

ci: update Python versions in test matrix
→ No version bump


MANUAL TRIGGERS:
================

# Override automatic version detection
gh workflow run version-and-release.yml -f version_bump=minor

# Test publishing to Test PyPI
gh workflow run publish-pypi.yml -f test_pypi=true

# Trigger CI manually
gh workflow run ci.yml


WORKFLOW STATUS:
================

View runs:    https://github.com/mikelane/valid8r/actions
View releases: https://github.com/mikelane/valid8r/releases
View on PyPI:  https://pypi.org/project/valid8r/

